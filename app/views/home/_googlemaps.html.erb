<!DOCTYPE html>
<html>
  <head>
    <title>Default Data Layer: Earthquakes</title>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <style>
/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */

/*
 * Position the map container to the bottom left corner and give it a fixed size
 */
html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}

gmp-map {
  position: sticky;
  bottom: 10px; /* Adjust bottom position as needed */
  left: 10px; /* Adjust left position as needed */
  width: 500px; /* Adjust width as needed */
  height: 300px; /* Adjust height as needed */
  border: 1px solid #ccc; /* Add border */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Add shadow */
  border-radius: 5px; /* Add border radius */
  z-index: 1000; /* Ensure it appears above other content */
}
  
}

/*
 * Optional: Styles for the content inside the map container
 */
gmp-map > * {
  width: 100%;
  height: 100%;
}
</style>
  </head>
  <body>
    <gmp-map center="46.18717855985782, 21.312238425306834" zoom="11.5"></gmp-map>
    <script>
      (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
        key: "...",
        v: "beta",
        solutionChannel: "GMP_CCS_datalayersinfo_v2",
      });
    </script>
    <script>
      /**
       * @license
       * Copyright 2024 Google LLC. All Rights Reserved.
       * SPDX-License-Identifier: Apache-2.0
       */
      let map;
      let infoWindow;

      async function init() {
        const { InfoWindow } = await google.maps.importLibrary("maps");

        map = document.querySelector('gmp-map').innerMap;
        infoWindow = new InfoWindow({pixelOffset: {height: -37}});

        // Load JSON file
        const response = await fetch('monumentearad.json');
        const data = await response.json();

        data.forEach(monumentearad => {
  const lat = parseFloat(monumentearad.Latitudine);
  const lon = parseFloat(monumentearad.Longitudine);
  const title = monumentearad.Denumire;
  const adress = monumentearad.Adresa;
  const description = monumentearad.Descriere;  
  

  if (isNaN(lat) || isNaN(lon) || typeof title !== 'string') {
    console.error('Invalid data:', monumentearad);
    return;
  }

  console.log("Marker data:", { lat, lon, title, description });


          // Add marker to map using google.maps.Marker
          const marker = new google.maps.Marker({
            map: map,
            position: { lat, lng: lon },
            title: title
          });

          // Add info window to marker
          marker.addListener('click', () => {
            infoWindow.setContent(`<h1>${title}</h1><p>${adress}</p><p>${description}</p>`); 
            infoWindow.open(map, marker);
          });
        });
      }

      init();
    </script>
  </body>
</html>